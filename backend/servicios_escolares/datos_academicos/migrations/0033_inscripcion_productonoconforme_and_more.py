# Generated by Django 5.2.1 on 2025-09-24 06:58

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('datos_academicos', '0032_carrera_creditos_totales'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Inscripcion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('folio', models.CharField(blank=True, max_length=20, unique=True)),
                ('fecha_solicitud', models.DateTimeField(auto_now_add=True)),
                ('tipo_inscripcion', models.CharField(choices=[('Nuevo Ingreso', 'Nuevo Ingreso'), ('Reingreso', 'Reingreso'), ('Convalidación', 'Convalidación'), ('Traslado', 'Traslado'), ('Equivalencia', 'Equivalencia')], default='Nuevo Ingreso', max_length=20)),
                ('nombre', models.CharField(max_length=100)),
                ('apellido_paterno', models.CharField(max_length=50)),
                ('apellido_materno', models.CharField(blank=True, max_length=50, null=True)),
                ('curp', models.CharField(max_length=18, unique=True)),
                ('fecha_nacimiento', models.DateField()),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino')], max_length=1)),
                ('estado_civil', models.CharField(choices=[('Soltero', 'Soltero'), ('Casado', 'Casado'), ('Divorciado', 'Divorciado'), ('Viudo', 'Viudo')], default='Soltero', max_length=20)),
                ('telefono', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('calle', models.CharField(max_length=100)),
                ('numero_exterior', models.CharField(max_length=10)),
                ('numero_interior', models.CharField(blank=True, max_length=10, null=True)),
                ('colonia', models.CharField(max_length=100)),
                ('municipio', models.CharField(max_length=100)),
                ('estado', models.CharField(max_length=100)),
                ('codigo_postal', models.CharField(max_length=5)),
                ('zona_procedencia', models.CharField(choices=[('Urbana', 'Urbana'), ('Rural', 'Rural')], max_length=100)),
                ('modalidad', models.CharField(choices=[('A', 'A (Presencial)'), ('B', 'B (Sabatino)')], default='A', max_length=1)),
                ('semestre_ingreso', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(19)])),
                ('escuela_procedencia', models.CharField(max_length=200)),
                ('promedio_bachillerato', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('año_egreso_bachillerato', models.IntegerField(validators=[django.core.validators.MinValueValidator(1990), django.core.validators.MaxValueValidator(2025)])),
                ('acta_nacimiento', models.BooleanField(default=False, verbose_name='Acta de Nacimiento')),
                ('certificado_bachillerato', models.BooleanField(default=False, verbose_name='Certificado de Bachillerato')),
                ('curp_documento', models.BooleanField(default=False, verbose_name='CURP')),
                ('fotografias', models.BooleanField(default=False, verbose_name='Fotografías')),
                ('comprobante_domicilio', models.BooleanField(default=False, verbose_name='Comprobante de Domicilio')),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('usuario_registro', models.CharField(blank=True, max_length=100, null=True)),
                ('alumno_creado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inscripcion_origen', to='datos_academicos.alumno')),
                ('carrera_solicitada', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inscripciones_solicitadas', to='datos_academicos.carrera')),
                ('periodo_escolar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inscripciones', to='datos_academicos.periodoescolar')),
            ],
            options={
                'verbose_name': 'Inscripción',
                'verbose_name_plural': 'Inscripciones',
                'ordering': ['-fecha_solicitud'],
            },
        ),
        migrations.CreateModel(
            name='ProductoNoConforme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('folio', models.CharField(blank=True, max_length=20, unique=True)),
                ('fecha_deteccion', models.DateTimeField(auto_now_add=True)),
                ('fecha_cierre', models.DateTimeField(blank=True, null=True)),
                ('tipo', models.CharField(choices=[('Documentación Incompleta', 'Documentación Incompleta'), ('Información Inconsistente', 'Información Inconsistente'), ('Requisitos No Cumplidos', 'Requisitos No Cumplidos'), ('Proceso Irregular', 'Proceso Irregular'), ('Otro', 'Otro')], max_length=30)),
                ('descripcion', models.TextField(help_text='Descripción detallada del problema detectado')),
                ('estado', models.CharField(choices=[('Detectado', 'Detectado'), ('En Análisis', 'En Análisis'), ('En Corrección', 'En Corrección'), ('Corregido', 'Corregido'), ('Cerrado', 'Cerrado')], default='Detectado', max_length=20)),
                ('prioridad', models.CharField(choices=[('Baja', 'Baja'), ('Media', 'Media'), ('Alta', 'Alta'), ('Crítica', 'Crítica')], default='Media', max_length=10)),
                ('observaciones', models.TextField(blank=True, help_text='Observaciones adicionales del proceso')),
                ('acciones_correctivas', models.TextField(blank=True, help_text='Acciones tomadas para corregir el problema')),
                ('fecha_inicio_correccion', models.DateTimeField(blank=True, null=True)),
                ('fecha_limite_correccion', models.DateTimeField(blank=True, null=True)),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('actualizado', models.DateTimeField(auto_now=True)),
                ('alumno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productos_no_conformes', to='datos_academicos.alumno')),
                ('asignado_a', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='productos_asignados', to=settings.AUTH_USER_MODEL)),
                ('detectado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='productos_detectados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Producto No Conforme',
                'verbose_name_plural': 'Productos No Conformes',
                'ordering': ['-fecha_deteccion'],
            },
        ),
        migrations.CreateModel(
            name='DocumentoProductoNoConforme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('tipo', models.CharField(choices=[('Evidencia', 'Evidencia'), ('Corrección', 'Corrección'), ('Verificación', 'Verificación'), ('Otro', 'Otro')], default='Evidencia', max_length=20)),
                ('archivo', models.FileField(upload_to='productos_no_conformes/documentos/')),
                ('descripcion', models.TextField(blank=True)),
                ('fecha_subida', models.DateTimeField(auto_now_add=True)),
                ('subido_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('producto_no_conforme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos', to='datos_academicos.productonoconforme')),
            ],
            options={
                'verbose_name': 'Documento de Producto No Conforme',
                'verbose_name_plural': 'Documentos de Productos No Conformes',
                'ordering': ['-fecha_subida'],
            },
        ),
        migrations.CreateModel(
            name='Reinscripcion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('folio', models.CharField(blank=True, max_length=20, unique=True)),
                ('fecha_solicitud', models.DateTimeField(auto_now_add=True)),
                ('motivo', models.CharField(choices=[('Baja Temporal', 'Baja Temporal'), ('Cambio de Modalidad', 'Cambio de Modalidad'), ('Cambio de Carrera', 'Cambio de Carrera'), ('Reactivación', 'Reactivación'), ('Producto No Conforme', 'Producto No Conforme')], max_length=30)),
                ('estado', models.CharField(choices=[('Pendiente', 'Pendiente'), ('En Revisión', 'En Revisión'), ('Aprobada', 'Aprobada'), ('Rechazada', 'Rechazada'), ('Completada', 'Completada')], default='Pendiente', max_length=20)),
                ('semestre_actual', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(19)])),
                ('promedio_actual', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('creditos_aprobados', models.IntegerField(default=0)),
                ('nueva_modalidad', models.CharField(blank=True, choices=[('A', 'A (Presencial)'), ('B', 'B (Sabatino)')], max_length=1, null=True)),
                ('nuevo_semestre', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(19)])),
                ('carta_motivos', models.BooleanField(default=False, verbose_name='Carta de Motivos')),
                ('documentos_actualizados', models.BooleanField(default=False, verbose_name='Documentos Actualizados')),
                ('comprobante_pago', models.BooleanField(default=False, verbose_name='Comprobante de Pago')),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('fecha_aprobacion', models.DateTimeField(blank=True, null=True)),
                ('usuario_aprobacion', models.CharField(blank=True, max_length=100, null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('usuario_registro', models.CharField(blank=True, max_length=100, null=True)),
                ('alumno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reinscripciones', to='datos_academicos.alumno')),
                ('nueva_carrera', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reinscripciones_destino', to='datos_academicos.carrera')),
                ('periodo_escolar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reinscripciones', to='datos_academicos.periodoescolar')),
            ],
            options={
                'verbose_name': 'Reinscripción',
                'verbose_name_plural': 'Reinscripciones',
                'ordering': ['-fecha_solicitud'],
            },
        ),
        migrations.AddField(
            model_name='productonoconforme',
            name='reinscripcion',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='producto_no_conforme', to='datos_academicos.reinscripcion'),
        ),
        migrations.CreateModel(
            name='SeguimientoProductoNoConforme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('accion', models.CharField(choices=[('Detectado', 'Detectado'), ('Asignado', 'Asignado'), ('En Análisis', 'En Análisis'), ('Corrección Iniciada', 'Corrección Iniciada'), ('Corrección Completada', 'Corrección Completada'), ('Verificado', 'Verificado'), ('Cerrado', 'Cerrado'), ('Reabierto', 'Reabierto')], max_length=30)),
                ('comentario', models.TextField(blank=True)),
                ('producto_no_conforme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seguimientos', to='datos_academicos.productonoconforme')),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Seguimiento de Producto No Conforme',
                'verbose_name_plural': 'Seguimientos de Productos No Conformes',
                'ordering': ['-fecha'],
            },
        ),
    ]
