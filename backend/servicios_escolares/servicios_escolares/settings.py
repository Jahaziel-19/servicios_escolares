"""
Django settings for servicios_escolares project.

Sistema de Servicios Escolares - Instituto Tecnológico Superior de Tlaxco
Configuración principal del proyecto Django

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os

# ===========================================
# CONFIGURACIÓN BASE DEL PROYECTO
# ===========================================

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-kld!coqo9v+vepbuw5l--3lvcn+9)($qr9v&$lopy$s(88@+jv'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django_admin_material',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'template_tags',
    'corsheaders',
    'rest_framework',
    #'coreapi',
    'formbuilder',  
    'datos_academicos',
    'docsbuilder',
    'excel_importer',
    'procedimientos',
    'admision',
    'theme',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'servicios_escolares.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'servicios_escolares.context_processors.theme',
            ],
            'builtins': [
                'template_tags.templatetags.compat',
            ],
        },
    },
]

WSGI_APPLICATION = 'servicios_escolares.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DB_ENGINE = os.getenv('DB_ENGINE', 'postgres')

if DB_ENGINE == 'postgres':
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': os.getenv('POSTGRES_DB', 'servicios_escolares'),
            'USER': os.getenv('POSTGRES_USER', 'postgres'),
            'PASSWORD': os.getenv('POSTGRES_PASSWORD', 'postgres'),
            'HOST': os.getenv('POSTGRES_HOST', 'localhost'),
            'PORT': os.getenv('POSTGRES_PORT', '5432'),
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# ========== CONFIGURACIÓN DE AUTENTICACIÓN PERSONALIZADA ==========
# Backend de autenticación personalizado para alumnos
AUTHENTICATION_BACKENDS = [
    'datos_academicos.auth_backends.AlumnoAuthBackend',  # Autenticación con matrícula y CURP
    'django.contrib.auth.backends.ModelBackend',        # Autenticación estándar de Django
]

# URLs de redirección después del login/logout
LOGIN_URL = '/datos_academicos/auth/login/'
LOGIN_REDIRECT_URL = '/datos_academicos/auth/dashboard/'
LOGOUT_REDIRECT_URL = '/datos_academicos/auth/login/'


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'es-mx'

TIME_ZONE = 'America/Mexico_City'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

#STATIC_ROOT = 'static/' 
STATIC_URL = 'static/'
MEDIA_URL = '/media/'


MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
    #BASE_DIR / "static",
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# CORS settings
CORS_ALLOWED_ORIGINS = [
    'http://localhost:3000',
]

TAILWIND_APP_NAME = 'theme'

'''
REST_FRAMEWORK = {
    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema',
}'''


#BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Opcional para django-weasyprint
#WEASYPRINT_BASEURL = MEDIA_ROOT  # o usa STATIC_ROOT si tienes CSS e imágenes

# Email configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'jahazielvazquez19@gmail.com'
EMAIL_HOST_PASSWORD = 'plvuzbwdlxlornnd'  # Contraseña de aplicación
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# Para desarrollo, usar console backend por defecto, salvo que se fuerce SMTP
'''
FORCE_SMTP_EMAIL = os.getenv('FORCE_SMTP_EMAIL', '0')
EMAIL_BACKEND_ENV = os.getenv('EMAIL_BACKEND', '')

if DEBUG and not FORCE_SMTP_EMAIL in ['1', 'true', 'True'] and not EMAIL_BACKEND_ENV:
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
elif EMAIL_BACKEND_ENV:
    EMAIL_BACKEND = EMAIL_BACKEND_ENV
'''

# DATOS ACADEMICOS
INSTITUCION_NOMBRE = "INSTITUTO TECNOLÓGICO SUPERIOR DE TLAXCO"
CONTACTO_TELEFONO = "2414123115"
CONTACTO_EMAIL = "contacto@itsTlaxco.edu.mx"